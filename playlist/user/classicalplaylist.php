<?php
// $Id: classicalplaylist.php,v 1.12 2004/10/16 15:51:35 admin Exp $
/******************************************************************************
* Theis Playlist Manager -- An interactive web application for creating,     *
* editing, and publishing radio playlists.                                   *
*                                                                            *
* Copyright (C) 2003  Aaron Forrest                                          *
*                                                                            *
* This program is free software; you can redistribute it and/or              *
* modify it under the terms of the GNU General Public License                *
* as published by the Free Software Foundation; either version 2             *
* of the License, or (at your option) any later version.                     *
*                                                                            *
* This program is distributed in the hope that it will be useful,            *
* but WITHOUT ANY WARRANTY; without even the implied warranty of             *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
* GNU General Public License for more details.                               *
*                                                                            *
* You should have received a copy of the GNU General Public License          *
* along with this program; if not, write to the Free Software                *
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.*
*****************************************************************************/

include("../lib/config.inc.php");
include("../lib/dblib.inc.php");
include("../lib/usrlib.inc.php");
include("../lib/PlaylistSession.php");

import("org/wprb/Playlist.php");
import("org/wprb/PlaylistLine.php");

checkUser();
checkGuestUser();

$userID = fetchUserID();
$pl_session = new PlaylistSession($show_id, $userID, $link);

// check to make sure user is legit
if ($_GET[show_id])
	$show_id = $_GET[show_id];
elseif($_POST[show_id])
	$show_id = $_POST[show_id];

// run validity tests and submit line to db
if ( isset($submitLine) || (isset($def_action) && $def_action == "newline" &&
		! isset($break) && ! isset($_POST[flag])))
	{
	$message = "";
	if ( empty( $_POST[composer] ) )
		$message .= "You must fill in an artist<Br>\n";
	if (empty($_POST[song]))
		$message .= "You must fill in a song title.<br>\n";

	if ($message == "")	{ // no errors
		writeClassicalPlaylistLine($show_id, $_POST[composer], $_POST[song],
					$_POST[ensemble], $_POST[conductor], $_POST[performer], 
					$_POST[label], $_POST[comments], $_POST[emph] );
	}
}

// write a set break line
if ( isset($break))
	writePlaylistLine($show_id, "*****", "BREAK", "*****", "","","","","");

// manipulate line
if (isset($manipulate) && isset($_POST[flag]))	{
	if ( $_POST[action] == "Edit")	{
		header ( "Location: editentry.php?id=$_POST[flag]&genre=Classical" );
	}
	
	$line = new PlaylistLine( $_POST[flag] );
	if ( $_POST[action] == "Delete")	{
		$line->delete();
	}
	if ( $_POST[action] == "Shift up" )	{
		if (! empty($_POST[shift_lines]) && is_numeric($_POST[shift_lines]) )	{
			while ( (int) $_POST[shift_lines]-- > 0 && $line->shiftUp() ){}
		}
		else $message .= "Number of lines must be greater than 0";
	}
	if ( $_POST[action] == "Shift down")	{
		if (! empty($_POST[shift_lines]) && is_numeric($_POST[shift_lines]) )	{
			while ( (int) $_POST[shift_lines]-- > 0 && $line->shiftDown() ){}
		}
		else $message .= "Number of lines must be greater than 0";
	}
}

// instantiate a Playlist object to fetch the already-entered playlist data
$playlist = new Playlist( $show_id );
$playlist->reset();

?>

<!-- page generated by Theis Playlist Manager -->
<html>
<head>
<title>Your Current Classical Playlist</title>
<link href="../css/wprb.css" rel="Stylesheet" type="text/css">
</head>

<!-- focus cursor on composer field -->
<body onLoad="document.myform.composer.focus();">

<div align='right' class='text'>
<a href='#' onClick="window.open('../lib/reportbug.php','bug_window','width=500,height=300')">
		send bug report</a>
</div>

<?php
if ($message != "" )
	print "<b>$message</b><p>";

print "<form name=\"myform\" method=\"POST\"
		action='classicalplaylist.php#entryform'>
		<input type=\"hidden\" name=\"show_id\" value=\"$show_id\">\n
		<input type=\"hidden\" name=\"def_action\" value=\"newline\">\n";

$headers = array("artist"=>"Composer", "song"=>"Piece", 
				"ensemble"=>"Ensemble/<br>Orchestra", "conductor"=>"Conductor", 
				"performer"=>"Soloist/<br>Performer", "label"=>"Label", 
				"comments"=>"Comments", "emph"=>"Recently<br>Released");

print "<table width='100%' cellpadding='3' cellspacing='2'>\n";
print "\t<tr>\n";
print "\t\t<th bgcolor=\"#FFFFFF\">&nbsp;</th>\n";

// first print the headers row
foreach ( $headers as $header )	{
	print "\t\t<th bgcolor=\"#CCCCCC\">$header</th>\n";
}

print "\t</tr>\n";

// now print the existing playlist content
while ( $playlist->hasNext() )	{
	$row = $playlist->next();
	print "\t<tr>\n";
	print "\t\t<td bgcolor=\"#EEEEEE\"><input type='checkbox' name='flag'
			value=\"$row->ID\">\n";
	foreach ( $headers as $key=>$header )	{
		print "\t\t<td bgcolor=\"EEEEEE\" class=\"text\">".$row->$key."</td>\n";
	}
	print "\t</tr>\n";
}

	
?>

<!-- anchor brings you right down here -->
<a name="entryform"></a>
<tr>
	<!-- Playlist Entry Form -->
	<td bgcolor="#EEEEEE">&nbsp;</td>
	<td bgcolor="#EEEEEE"><input type="text" name="composer" 
		<?= ((! empty($message) && isset($_POST[composer]))?"value='$_POST[composer]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="song" 
		<?= ((! empty($message) && isset($_POST[song]))?"value='$_POST[song]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="ensemble" 
		<?= ((! empty($message) && isset($_POST[ensemble]))?"value='$_POST[ensemble]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="conductor" 
		<?= ((! empty($message) && isset($_POST[conductor]))?"value='$_POST[conductor]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="performer" 
		<?= ((! empty($message) && isset($_POST[performer]))?"value='$_POST[performer]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="label" size="10" 
		<?= ((! empty($message) && isset($_POST[label]))?"value='$_POST[label]'":"") ?> /></td>
	<td bgcolor="#EEEEEE"><input type="text" name="comments" 
		<?= ((! empty($message) && isset($_POST[comments]))?"value='$_POST[comments]'":"") ?> /></td>
	<td class='mid' bgcolor="#EEEEEE" class=\"text\">New:<input type="checkbox" 
				name="emph" value="NE" <?= ((! empty($message) && $_POST[emph]) ? "checked" : "") ?>/></td>
</tr>
</table>
<select name="action">	
	<option />Edit
	<option />Delete
	<option />Shift up
	<option />Shift down
</select>
&nbsp;&nbsp;
<input type="text" size="2" name="shift_lines" value="1" /> 
lines (for shift operations)<br />
<input type="submit" name="manipulate" value="Go" />
<p>
<input type="submit" name="submitLine" value="Submit" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type="submit" name="break" value="Insert break" /></p>
<p>
<input type="reset" value="Reset form" /></p>
</form>
<p>
<a href="endshow.php?show_id=<?= $show_id ?>" target="_parent"><b>End show</b></a>
</p>

</body>
</html>
